/**
 * this is the main configuration file of your bit workspace.
 * for full documentation, please see: https://harmony-docs.bit.dev/workspace/configurations
 **/{
  "$schema": "https://static.bit.dev/teambit/schemas/schema.json",
  /**
   * main configuration of the Bit workspace.
   **/
  "teambit.workspace/workspace": {
    /**
     * the name of the component workspace. used for development purposes.
     **/
    "name": "components",
    /**
     * set the icon to be shown on the Bit server.
     **/
    "icon": "https://static.bit.dev/bit-logo.svg",
    /**
     * default directory to place a component during `bit import` and `bit create`.
     * the following placeholders are available:
     * name - component name includes namespace, e.g. 'ui/button'.
     * scopeId - full scope-id includes the owner, e.g. 'teambit.compilation'.
     * scope - scope name only, e.g. 'compilation'.
     * owner - owner name in bit.dev, e.g. 'teambit'.
     **/
    "defaultDirectory": "{scope}/{name}",
    /**
     * default scope for all components in workspace.
     **/
    "defaultScope": "waweb.demo"
  },
  /**
   * main configuration for component dependency resolution.
   **/
  "teambit.dependencies/dependency-resolver": {
    /**
     * choose the package manager for Bit to use. you can choose between 'yarn', 'pnpm'
     */
    "packageManager": "teambit.dependencies/pnpm",
    "policy": {
      "dependencies": {
        "@teambit/design.ui.external-link": "0.0.344",
        "@teambit/eslint-config-bit-react": "~0.0.367",
        "@teambit/harmony": "0.2.11",
        "@typescript-eslint/eslint-plugin": "4.29.3",
        "clsx": "1.1.1",
        "eslint-import-resolver-node": "0.3.6",
        "eslint-plugin-import": "2.22.1",
        "eslint-plugin-jest": "24.4.0",
        "eslint-plugin-jsx-a11y": "6.4.1",
        "eslint-plugin-mdx": "1.15.0",
        "eslint-plugin-react": "7.25.1"
      },
      "peerDependencies": {
        "@emotion/css": "^11.7.1",
        "@emotion/react": "^11.7.1",
        "@emotion/styled": "^11.6.0",
        "@mui/material": "^5.2.8",
        "@mui/types": "^7.1.0",
        "@spectrum-css/button": "^6.0.0",
        "@spectrum-css/buttongroup": "5.0.0",
        "@spectrum-css/card": "4.0.9",
        "@spectrum-css/clearbutton": "1.2.0",
        "@spectrum-css/closebutton": "1.2.0",
        "@spectrum-css/dialog": "5.0.0",
        "@spectrum-css/divider": "1.0.13",
        "@spectrum-css/fieldgroup": "3.0.12",
        "@spectrum-css/fieldlabel": "4.0.9",
        "@spectrum-css/helptext": "1.0.9",
        "@spectrum-css/inlinealert": "4.0.0",
        "@spectrum-css/inputgroup": "4.0.4",
        "@spectrum-css/link": "3.1.12",
        "@spectrum-css/modal": "3.0.11",
        "@spectrum-css/page": "^5.0.0",
        "@spectrum-css/pagination": "5.0.0",
        "@spectrum-css/popover": "5.0.0",
        "@spectrum-css/progressbar": "1.0.13",
        "@spectrum-css/progresscircle": "1.0.11",
        "@spectrum-css/radio": "3.0.12",
        "@spectrum-css/textfield": "3.1.3",
        "@spectrum-css/typography": "4.0.9",
        "@spectrum-css/well": "3.0.11",
        "@testing-library/react": "^12.0.0",
        "json-formatter-js": "^2.3.4",
        "react": "^17.0.2",
        "react-dom": "^17.0.2",
        "url-parse": "^1.5.4"
      }
    }
  },
  /**
   * Add an aditional bundler for pure html
   */
  "teambit.compilation/bundler": {
    "dedicatedEnvDevServers": [
      "teambit.html/html"
    ]
  },
  /**
   * workspace variants allow to set different subsets of configuration for components in your
   * workspace. this is extremely useful for upgrading, aligning and building components with a new
   * set of dependencies. a rule can be a directory or a component-id/namespace, in which case,
   * wrap the rule with curly brackets (e.g. `"{ui/*}": {}`)
   * see https://harmony-docs.bit.dev/aspects/variants for more info.
   **/
  "teambit.workspace/variants": {
    "base-ui": {
      "defaultScope": "waweb.base-ui"
    },
    "envs": {
      "defaultScope": "waweb.envs"
    },
    "content": {
      "defaultScope": "waweb.content"
    },
    "demo": {
      "defaultScope": "waweb.demo"
    },
    "docs": {
      "defaultScope": "waweb.docs"
    },
    "mdx": {
      "defaultScope": "waweb.mdx"
    },
    "spectrum": {
      "defaultScope": "waweb.spectrum"
    },
    "theme": {
      "defaultScope": "waweb.theme"
    },
    "tools": {
      "defaultScope": "waweb.tools"
    },
    /**
     * configures all components with the appropritate build environment
     *
     */
    "docs/ui, docs/theme, demo/theme, demo/styles": {
      "teambit.react/react": {}
    },
    "base-ui/elements, base-ui/layout, base-ui/input, base-ui/routing,  base-ui/text, base-ui/theme": {
      "teambit.react/react": {}
    },
    /**
     * configures components with namespaces 'entities', 'modules' and 'functions' to use the
     * default NodeJS dev environment.
     */
    "{ui/atoms/**}, {ui/molecules/**}, {ui/organisms/**}, {ui/views/**}, docs/ui, mdx/ui, spectrum/theme": {
      "waweb.envs/wa-react": {},
      "teambit.react/react": "-"
    },
    /**
     * configures components with namespace 'content' to use the MDX dev environment.
     */
    "{content/**}": {
      "teambit.mdx/mdx": {}
    },
    /**
     * configures components with namespaces 'envs' and 'aspects' to use the default Aspect development environment.
     */
    "{mdx-document}, {wa-react}": {
      "teambit.harmony/aspect": {}
    },
    "spectrum/design/typogrophy": {
      // e.g. apply the env to all components under the some/path directory
      "teambit.html/html": {}
    }
  }
}